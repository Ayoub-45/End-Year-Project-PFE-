// <auto-generated />
using System;
using MedicalThyroidReports.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MedicalThyroidReports.Migrations
{
    [DbContext(typeof(MedicalThyroidRportsDbContext))]
    partial class MedicalThyroidRportsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MedicalThyroidReports.Modals.Domain.Nodule", b =>
                {
                    b.Property<int>("IdNodule")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNodule"), 1L, 1);

                    b.Property<string>("Composition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Echogenecity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Evolution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScoreTIRADS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ThyroidStudyIdStudy")
                        .HasColumnType("int");

                    b.Property<string>("shape")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdNodule");

                    b.HasIndex("ThyroidStudyIdStudy");

                    b.ToTable("Nodules");
                });

            modelBuilder.Entity("MedicalThyroidReports.Modals.Domain.Patient", b =>
                {
                    b.Property<int>("IdPatient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPatient"), 1L, 1);

                    b.Property<string>("AddressPatient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityPatient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodePatient")
                        .HasColumnType("int");

                    b.Property<string>("CountryPatient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatientFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientMidName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhonePatient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SexPatient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPatient");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("MedicalThyroidReports.Modals.Domain.Study", b =>
                {
                    b.Property<int>("IdStudy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStudy"), 1L, 1);

                    b.Property<DateTime>("DateStudy")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdRadiologist")
                        .HasColumnType("int");

                    b.Property<int?>("PatientIdPatient")
                        .HasColumnType("int");

                    b.Property<int>("TypeOfStudy")
                        .HasColumnType("int");

                    b.HasKey("IdStudy");

                    b.HasIndex("PatientIdPatient");

                    b.ToTable("Studys");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Study");
                });

            modelBuilder.Entity("MedicalThyroidReports.Modals.Domain.ThyroidStudy", b =>
                {
                    b.HasBaseType("MedicalThyroidReports.Modals.Domain.Study");

                    b.Property<string>("Echogenicity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LymphNodeUltra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recommendation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThyroglossalTrackStudy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vascularization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ThyroidStudy");
                });

            modelBuilder.Entity("MedicalThyroidReports.Modals.Domain.Nodule", b =>
                {
                    b.HasOne("MedicalThyroidReports.Modals.Domain.ThyroidStudy", null)
                        .WithMany("Nodules")
                        .HasForeignKey("ThyroidStudyIdStudy");
                });

            modelBuilder.Entity("MedicalThyroidReports.Modals.Domain.Study", b =>
                {
                    b.HasOne("MedicalThyroidReports.Modals.Domain.Patient", null)
                        .WithMany("studies")
                        .HasForeignKey("PatientIdPatient");
                });

            modelBuilder.Entity("MedicalThyroidReports.Modals.Domain.Patient", b =>
                {
                    b.Navigation("studies");
                });

            modelBuilder.Entity("MedicalThyroidReports.Modals.Domain.ThyroidStudy", b =>
                {
                    b.Navigation("Nodules");
                });
#pragma warning restore 612, 618
        }
    }
}
